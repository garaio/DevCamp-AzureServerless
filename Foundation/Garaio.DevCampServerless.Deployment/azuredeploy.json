{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourceNamePrefix": {
            "type": "string",
            "defaultValue": "gro-dcs"
        },
        "resourceNameSuffix": {
            "type": "string",
            "metadata": {
                "description": "The suffix will be appended to every to every resource name. You have to specify a unique, not yet used, value."
            }
        },
        "functionsRepoUrl": {
            "type": "string",
            "defaultValue": "https://github.com/garaio/DevCamp-AzureServerless.git"
        },
        "functionsRepoBranch": {
            "type": "string",
            "defaultValue": "master"
        },
        "deploymentType": {
            "type": "string",
            "allowedValues": [
                "initial",
                "postinitial",
                "regular"
            ],
            "defaultValue": "initial",
            "metadata": {
                "description": "This setting allows to handle issues with resource dependencies (e.g. https://stackoverflow.com/questions/59967186)"
            }
        },
        "serviceApiKeyEmulator": {
            "type": "securestring",
            "defaultValue": "78d9b775-6ec8-4a6c-9ca9-f3e1affcd67d"
        },
        "serviceApiKeyClient": {
            "type": "securestring",
            "defaultValue": "bada7656-1856-47b7-b0e8-c3c48d7a8e3d"
        }
    },
    "variables": {
        "logAnalyticsWsName": "[concat(parameters('resourceNamePrefix'), '-', 'law', '-', parameters('resourceNameSuffix'))]",
        "appInsightsName": "[concat(parameters('resourceNamePrefix'), '-', 'ai', '-', parameters('resourceNameSuffix'))]",

        "keyVaultName": "[concat(parameters('resourceNamePrefix'), '-kv', '-', parameters('resourceNameSuffix'))]",
        "keyVaultSecretStorageAccountConnectionString": "storageAccountConnectionString",

        "serviceFuncName": "[concat(parameters('resourceNamePrefix'), '-', 'service-f', '-', parameters('resourceNameSuffix'))]",
        "serviceFuncProjectPath": "Foundation/Garaio.DevCampServerless.ServiceFuncApp",

        "emulatorFuncName": "[concat(parameters('resourceNamePrefix'), '-', 'emulator-f', '-', parameters('resourceNameSuffix'))]",
        "emulatorFuncScheduleExpr": "0 */5 6-20 * * 1-6",
        "emulatorFuncProjectPath": "Foundation/Garaio.DevCampServerless.EmulatorFuncApp",

        "clientAppPackagePattern": "/raw/{0}/Foundation/Garaio.DevCampServerless.Deployment/blobs/%24web.zip",

        "blobContainerConfig": "config",
        "storageAccountName": "[replace(concat(parameters('resourceNamePrefix'), '-', 'sa', '-', parameters('resourceNameSuffix')), '-', '')]",
        "storageAccountBlobs": [
            {
                "name": "[variables('blobContainerConfig')]",
                "publicAccess": "None"
            }
        ],
        "storageAccountUri": "[concat('https://', variables('storageAccountName'), '.blob.core.windows.net/')]",

        "appServicePlanName": "[concat(parameters('resourceNamePrefix'), '-', 'asp', '-', parameters('resourceNameSuffix'))]",
        "appServicePlanSku": {
            "name": "Y1",
            "tier": "Dynamic"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "condition": "[not(equals(parameters('deploymentType'), 'postinitial'))]",
            "apiVersion": "2019-06-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "tags": {},
            "scale": null,
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "name": "[concat(variables('storageAccountName'), '/default/', variables('storageAccountBlobs')[copyIndex()].name)]",
            "condition": "[not(equals(parameters('deploymentType'), 'postinitial'))]",
            "apiVersion": "2019-06-01",
            "properties": {
                "publicAccess": "[variables('storageAccountBlobs')[copyIndex()].publicAccess]"
            },
            "copy": {
                "name": "storageaccountblobscopy",
                "count": "[length(variables('storageAccountBlobs'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "name": "[variables('logAnalyticsWsName')]",
            "condition": "[not(equals(parameters('deploymentType'), 'postinitial'))]",
            "apiVersion": "2020-03-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "name": "[variables('appInsightsName')]",
            "condition": "[not(equals(parameters('deploymentType'), 'postinitial'))]",
            "apiVersion": "2020-02-02-preview",
            "location": "[resourceGroup().location]",
            "kind": "web",
            "properties": {
                "ApplicationId": "[variables('appInsightsName')]",
                "Application_Type": "web",
                "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]"
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('keyVaultName')]",
            "condition": "[not(equals(parameters('deploymentType'), 'postinitial'))]",
            "apiVersion": "2019-09-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "scale": null,
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "enabledForTemplateDeployment": true,
                "accessPolicies": []
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/providers/diagnosticSettings",
            "name": "[concat(variables('keyVaultName'), '/Microsoft.Insights/', 'LogAnalytics')]",
            "condition": "[not(equals(parameters('deploymentType'), 'postinitial'))]",
            "apiVersion": "2017-05-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]"
            ],
            "properties": {
                "name": "LogAnalytics",
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWsName'))]",
                "logs": [
                    {
                        "category": "AuditEvent",
                        "enabled": true
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true
                    }
                ]
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "name": "[concat(variables('keyVaultName'), '/add')]",
            "condition": "[not(equals(parameters('deploymentType'), 'postinitial'))]",
            "apiVersion": "2019-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('serviceFuncName')), '2019-08-01', 'Full').identity.principalId]",
                        "permissions": {
                            "keys": [ "get" ],
                            "secrets": [ "get" ]
                        }
                    },
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('emulatorFuncName')), '2019-08-01', 'Full').identity.principalId]",
                        "permissions": {
                            "keys": [ "get" ],
                            "secrets": [ "get" ]
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('serviceFuncName'))]",
                "[resourceId('Microsoft.Web/sites', variables('emulatorFuncName'))]",
                "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
            ]
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "name": "[concat(variables('keyVaultName'), '/', variables('keyVaultSecretStorageAccountConnectionString'))]",
            "condition": "[not(equals(parameters('deploymentType'), 'postinitial'))]",
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "name": "[variables('appServicePlanName')]",
            "condition": "[not(equals(parameters('deploymentType'), 'postinitial'))]",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "sku": "[variables('appServicePlanSku')]",
            "properties": {
                "name": "[variables('appServicePlanName')]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "name": "[variables('serviceFuncName')]",
            "condition": "[not(equals(parameters('deploymentType'), 'postinitial'))]",
            "kind": "functionapp",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('serviceFuncName'),'.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('serviceFuncName'),'.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "clientAffinityEnabled": true,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "siteConfig": {
                    "cors": {
                        "allowedOrigins": [
                            "*"
                        ]
                    }
                }
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(variables('serviceFuncName'), '/appsettings')]",
            "condition": "[not(equals(parameters('deploymentType'), 'postinitial'))]",
            "apiVersion": "2019-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('serviceFuncName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('keyVaultSecretStorageAccountConnectionString'))]"
            ],
            "properties": {
                "AzureWebJobsStorage": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('keyVaultSecretStorageAccountConnectionString'))).secretUriWithVersion, ')')]",
                "AzureWebJobsDisableHomepage": true,
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('Microsoft.Insights/components/', variables('appInsightsName'))).InstrumentationKey]",
                "APPINSIGHTS_PROFILERFEATURE_VERSION": "1.0.0",
                "APPINSIGHTS_SNAPSHOTFEATURE_VERSION": "1.0.0",
                "DiagnosticServices_EXTENSION_VERSION": "~3",
                "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
                "FUNCTIONS_EXTENSION_VERSION": "~3",
                "PROJECT": "[variables('serviceFuncProjectPath')]",
                "StorageConnectionString": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('keyVaultSecretStorageAccountConnectionString'))).secretUriWithVersion, ')')]",
                "ConfigContainerName": "[variables('blobContainerConfig')]"
            }
        },
        {
            "type": "Microsoft.Web/sites/host/functionKeys",
            "name": "[concat(variables('serviceFuncName'), '/default/emulator')]",
            "apiVersion": "2019-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/sourcecontrols', variables('serviceFuncName'), 'web')]"
            ],
            "properties": {
                "name": "emulator",
                "value": "[parameters('serviceApiKeyEmulator')]"
            }
        },
        {
            "type": "Microsoft.Web/sites/host/functionKeys",
            "name": "[concat(variables('serviceFuncName'), '/default/client')]",
            "apiVersion": "2019-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/sourcecontrols', variables('serviceFuncName'), 'web')]"
            ],
            "properties": {
                "name": "client",
                "value": "[parameters('serviceApiKeyClient')]"
            }
        },
        {
            "type": "Microsoft.Web/sites/sourcecontrols",
            "name": "[concat(variables('serviceFuncName'), '/web')]",
            "condition": "[equals(parameters('deploymentType'), 'initial')]",
            "apiVersion": "2019-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/config', variables('serviceFuncName'), 'appsettings')]"
            ],
            "properties": {
                "repoUrl": "[parameters('functionsRepoUrl')]",
                "branch": "[parameters('functionsRepoBranch')]",
                "isManualIntegration": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "name": "[variables('emulatorFuncName')]",
            "condition": "[not(equals(parameters('deploymentType'), 'postinitial'))]",
            "kind": "functionapp",
            "apiVersion": "2019-08-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('emulatorFuncName'),'.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('emulatorFuncName'),'.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "clientAffinityEnabled": true,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(variables('emulatorFuncName'), '/appsettings')]",
            "condition": "[not(equals(parameters('deploymentType'), 'postinitial'))]",
            "apiVersion": "2019-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('emulatorFuncName'))]",
                "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('keyVaultSecretStorageAccountConnectionString'))]",
                "[resourceId('Microsoft.Web/sites/host/functionKeys', variables('serviceFuncName'), 'default', 'emulator')]",
                "[resourceId('Microsoft.Web/sites/host/functionKeys', variables('serviceFuncName'), 'default', 'client')]"
            ],
            "properties": {
                "AzureWebJobsStorage": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('keyVaultSecretStorageAccountConnectionString'))).secretUriWithVersion, ')')]",
                "AzureWebJobsDisableHomepage": true,
                "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('Microsoft.Insights/components/', variables('appInsightsName'))).InstrumentationKey]",
                "APPINSIGHTS_PROFILERFEATURE_VERSION": "1.0.0",
                "APPINSIGHTS_SNAPSHOTFEATURE_VERSION": "1.0.0",
                "DiagnosticServices_EXTENSION_VERSION": "~3",
                "ApplicationInsightsAgent_EXTENSION_VERSION": "~2",
                "FUNCTIONS_EXTENSION_VERSION": "~3",
                "WEBSITE_TIME_ZONE": "W. Europe Standard Time",
                "PROJECT": "[variables('emulatorFuncProjectPath')]",
                "StorageConnectionString": "[concat('@Microsoft.KeyVault(SecretUri=', reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('keyVaultSecretStorageAccountConnectionString'))).secretUriWithVersion, ')')]",
                "ScheduleExpression": "[variables('emulatorFuncScheduleExpr')]",
                "ServiceFuncUrl": "[concat('https://', variables('serviceFuncName'), '.azurewebsites.net/api')]",
                "ServiceFuncKeyEmulator": "[parameters('serviceApiKeyEmulator')]",
                "ServiceFuncKeyClient": "[parameters('serviceApiKeyClient')]",
                "RepoUrl": "[parameters('functionsRepoUrl')]",
                "RepoBranch": "[parameters('functionsRepoBranch')]",
                "RepoClientAppPackagePattern": "[variables('clientAppPackagePattern')]"
            }
        },
        {
            "type": "Microsoft.Web/sites/sourcecontrols",
            "name": "[concat(variables('emulatorFuncName'), '/web')]",
            "condition": "[equals(parameters('deploymentType'), 'initial')]",
            "apiVersion": "2019-08-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites/config', variables('emulatorFuncName'), 'appsettings')]"
            ],
            "properties": {
                "repoUrl": "[parameters('functionsRepoUrl')]",
                "branch": "[parameters('functionsRepoBranch')]",
                "isManualIntegration": true
            }
        }
    ],
    "outputs": {}
}
